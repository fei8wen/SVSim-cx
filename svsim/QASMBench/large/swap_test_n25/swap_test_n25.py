import sys
sys.path.insert(0,'../../../SV-Sim/build/')
import libsvsim_py_nvgpu_omp as svsim

if (len(sys.argv) != 3):
	print('$python circuit.py n_qubits n_cores')
	exit()

sim = svsim.Simulation(int(sys.argv[1]), int(sys.argv[2]))

sim.append(sim.RX(-3.6924814, 1))
sim.append(sim.RX(-3.2923147, 13))
sim.append(sim.RX(5.4291652, 2))
sim.append(sim.RX(5.6875289, 14))
sim.append(sim.RX(1.3594796, 3))
sim.append(sim.RX(1.2065807, 15))
sim.append(sim.RX(-5.9123043, 4))
sim.append(sim.RX(-6.0041031, 16))
sim.append(sim.RX(-0.13186279, 5))
sim.append(sim.RX(0.50271205, 17))
sim.append(sim.RX(-4.3869008, 6))
sim.append(sim.RX(-4.1172873, 18))
sim.append(sim.RX(4.9830092, 7))
sim.append(sim.RX(4.8261369, 19))
sim.append(sim.RX(-1.4181518, 8))
sim.append(sim.RX(-1.5885531, 20))
sim.append(sim.RX(3.9058792, 9))
sim.append(sim.RX(3.2780951, 21))
sim.append(sim.RX(2.1483107, 10))
sim.append(sim.RX(2.2125048, 22))
sim.append(sim.RX(-1.552265, 11))
sim.append(sim.RX(-2.1338861, 23))
sim.append(sim.RX(3.5437778, 12))
sim.append(sim.RX(2.9294436, 24))
sim.append(sim.H(0))
sim.append(sim.CSWAP(0, 1, 13))
sim.append(sim.CSWAP(0, 2, 14))
sim.append(sim.CSWAP(0, 3, 15))
sim.append(sim.CSWAP(0, 4, 16))
sim.append(sim.CSWAP(0, 5, 17))
sim.append(sim.CSWAP(0, 6, 18))
sim.append(sim.CSWAP(0, 7, 19))
sim.append(sim.CSWAP(0, 8, 20))
sim.append(sim.CSWAP(0, 9, 21))
sim.append(sim.CSWAP(0, 10, 22))
sim.append(sim.CSWAP(0, 11, 23))
sim.append(sim.CSWAP(0, 12, 24))
sim.append(sim.H(0))

sim.upload()
sim.run()
sim.measure(1)
