import sys
sys.path.insert(0,'../../../build/')
import libsvsim as svsim

if (len(sys.argv) != 3):
	print('$python circuit.py n_qubits n_cores')
	exit()

sim = svsim.Simulation(int(sys.argv[1]), int(sys.argv[2]))

# Generated from Cirq v0.8.0
# Qubits: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
sim.append(sim.X(13))
sim.append(sim.X(12))
sim.append(sim.X(10))
sim.append(sim.X(9))
# Gate: <__main__.Multiplier object at 0x7f0de092ec40>
sim.append(sim.CCX(12, 9, 1))
sim.append(sim.CCX(12, 10, 4))
sim.append(sim.CCX(12, 11, 7))
sim.append(sim.CCX(1, 2, 3))
sim.append(sim.CX(1, 2))
sim.append(sim.CCX(0, 2, 3))
sim.append(sim.CCX(4, 5, 6))
sim.append(sim.CX(4, 5))
sim.append(sim.CCX(3, 5, 6))
sim.append(sim.CX(7, 8))
sim.append(sim.CX(6, 8))
sim.append(sim.CCX(3, 5, 6))
sim.append(sim.CX(4, 5))
sim.append(sim.CCX(4, 5, 6))
sim.append(sim.CX(4, 5))
sim.append(sim.CX(3, 5))
sim.append(sim.CCX(0, 2, 3))
sim.append(sim.CX(1, 2))
sim.append(sim.CCX(1, 2, 3))
sim.append(sim.CX(1, 2))
sim.append(sim.CX(0, 2))
sim.append(sim.CCX(12, 9, 1))
sim.append(sim.CCX(12, 10, 4))
sim.append(sim.CCX(12, 11, 7))
sim.append(sim.CCX(13, 9, 4))
sim.append(sim.CCX(13, 10, 7))
sim.append(sim.CCX(1, 2, 3))
sim.append(sim.CX(1, 2))
sim.append(sim.CCX(0, 2, 3))
sim.append(sim.CCX(4, 5, 6))
sim.append(sim.CX(4, 5))
sim.append(sim.CCX(3, 5, 6))
sim.append(sim.CX(7, 8))
sim.append(sim.CX(6, 8))
sim.append(sim.CCX(3, 5, 6))
sim.append(sim.CX(4, 5))
sim.append(sim.CCX(4, 5, 6))
sim.append(sim.CX(4, 5))
sim.append(sim.CX(3, 5))
sim.append(sim.CCX(0, 2, 3))
sim.append(sim.CX(1, 2))
sim.append(sim.CCX(1, 2, 3))
sim.append(sim.CX(1, 2))
sim.append(sim.CX(0, 2))
sim.append(sim.CCX(13, 9, 4))
sim.append(sim.CCX(13, 10, 7))
sim.append(sim.CCX(14, 9, 7))
sim.append(sim.CCX(1, 2, 3))
sim.append(sim.CX(1, 2))
sim.append(sim.CCX(0, 2, 3))
sim.append(sim.CCX(4, 5, 6))
sim.append(sim.CX(4, 5))
sim.append(sim.CCX(3, 5, 6))
sim.append(sim.CX(7, 8))
sim.append(sim.CX(6, 8))
sim.append(sim.CCX(3, 5, 6))
sim.append(sim.CX(4, 5))
sim.append(sim.CCX(4, 5, 6))
sim.append(sim.CX(4, 5))
sim.append(sim.CX(3, 5))
sim.append(sim.CCX(0, 2, 3))
sim.append(sim.CX(1, 2))
sim.append(sim.CCX(1, 2, 3))
sim.append(sim.CX(1, 2))
sim.append(sim.CX(0, 2))
sim.append(sim.CCX(14, 9, 7))

sim.upload()
sim.run()
