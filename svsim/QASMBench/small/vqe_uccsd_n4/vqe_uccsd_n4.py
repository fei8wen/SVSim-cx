import sys
sys.path.insert(0,'../../../SV-Sim/build/')
import libsvsim_py_cpu_sin as svsim

if (len(sys.argv) != 2):
	print('$python circuit.py n_qubits')
	exit()

sim = svsim.Simulation(int(sys.argv[1]))

sim.append(sim.H(3))
sim.append(sim.H(2))
sim.append(sim.H(0))
sim.append(sim.H(0))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(2.151746, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.H(3))
sim.append(sim.H(2))
sim.append(sim.H(0))
sim.append(sim.H(0))
sim.append(sim.Y(3))
sim.append(sim.Y(2))
sim.append(sim.Y(0))
sim.append(sim.Y(0))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(2.151746, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.Y(3))
sim.append(sim.Y(2))
sim.append(sim.Y(0))
sim.append(sim.Y(0))
sim.append(sim.H(3))
sim.append(sim.Y(2))
sim.append(sim.H(0))
sim.append(sim.Y(0))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(2.151746, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.H(3))
sim.append(sim.Y(2))
sim.append(sim.H(0))
sim.append(sim.Y(0))
sim.append(sim.Y(3))
sim.append(sim.H(2))
sim.append(sim.Y(0))
sim.append(sim.H(0))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(2.151746, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.Y(3))
sim.append(sim.H(2))
sim.append(sim.Y(0))
sim.append(sim.H(0))
sim.append(sim.Y(3))
sim.append(sim.Y(2))
sim.append(sim.H(0))
sim.append(sim.H(0))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(2.151746, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.Y(3))
sim.append(sim.Y(2))
sim.append(sim.H(0))
sim.append(sim.H(0))
sim.append(sim.H(3))
sim.append(sim.H(2))
sim.append(sim.Y(0))
sim.append(sim.Y(0))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(2.151746, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.H(3))
sim.append(sim.H(2))
sim.append(sim.Y(0))
sim.append(sim.Y(0))
sim.append(sim.Y(3))
sim.append(sim.H(2))
sim.append(sim.H(0))
sim.append(sim.Y(0))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(2.151746, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.Y(3))
sim.append(sim.H(2))
sim.append(sim.H(0))
sim.append(sim.Y(0))
sim.append(sim.H(3))
sim.append(sim.Y(2))
sim.append(sim.Y(0))
sim.append(sim.H(0))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(2.151746, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.H(3))
sim.append(sim.Y(2))
sim.append(sim.Y(0))
sim.append(sim.H(0))
sim.append(sim.H(1))
sim.append(sim.H(0))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(1.995482, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.H(1))
sim.append(sim.H(0))
sim.append(sim.Y(1))
sim.append(sim.Y(0))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(1.995482, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.Y(1))
sim.append(sim.Y(0))
sim.append(sim.H(2))
sim.append(sim.H(0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(4.332582, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.H(2))
sim.append(sim.H(0))
sim.append(sim.Y(2))
sim.append(sim.Y(0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(4.332582, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.Y(2))
sim.append(sim.Y(0))
sim.append(sim.H(2))
sim.append(sim.H(1))
sim.append(sim.CX(2, 1))
sim.append(sim.RZ(0.461922, 1))
sim.append(sim.CX(2, 1))
sim.append(sim.H(2))
sim.append(sim.H(1))
sim.append(sim.Y(2))
sim.append(sim.Y(1))
sim.append(sim.CX(2, 1))
sim.append(sim.RZ(0.461922, 1))
sim.append(sim.CX(2, 1))
sim.append(sim.Y(2))
sim.append(sim.Y(1))
sim.append(sim.H(3))
sim.append(sim.H(0))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(1.086976, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.H(3))
sim.append(sim.H(0))
sim.append(sim.Y(3))
sim.append(sim.Y(0))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(1.086976, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.Y(3))
sim.append(sim.Y(0))
sim.append(sim.H(3))
sim.append(sim.H(1))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.RZ(2.258394, 1))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.H(3))
sim.append(sim.H(1))
sim.append(sim.Y(3))
sim.append(sim.Y(1))
sim.append(sim.CX(3, 2))
sim.append(sim.CX(2, 1))
sim.append(sim.RZ(2.258394, 1))
sim.append(sim.CX(2, 1))
sim.append(sim.CX(3, 2))
sim.append(sim.Y(3))
sim.append(sim.Y(1))
sim.append(sim.H(3))
sim.append(sim.H(2))
sim.append(sim.CX(3, 2))
sim.append(sim.RZ(1.228531, 2))
sim.append(sim.CX(3, 2))
sim.append(sim.H(3))
sim.append(sim.H(2))
sim.append(sim.Y(3))
sim.append(sim.Y(2))
sim.append(sim.CX(3, 2))
sim.append(sim.RZ(1.228531, 2))
sim.append(sim.CX(3, 2))
sim.append(sim.Y(3))
sim.append(sim.Y(2))

sim.upload()
sim.run()
sim.measure(10)
