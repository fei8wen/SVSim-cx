import sys
sys.path.insert(0,'../../../SV-Sim/build/')
import libsvsim_py_cpu_sin as svsim

if (len(sys.argv) != 2):
	print('$python circuit.py n_qubits')
	exit()

sim = svsim.Simulation(int(sys.argv[1]))

# Generated from Cirq v0.8.0
# Qubits: [0, 1, 2, 3]
sim.append(sim.X(0))
sim.append(sim.X(1))
# Gate: PhasedISWAP**0.9951774602384953
sim.append(sim.RZ(0.7853981633974483, 1))
sim.append(sim.RZ(-0.7853981633974483, 2))
sim.append(sim.CX(1, 2))
sim.append(sim.H(1))
sim.append(sim.CX(2, 1))
sim.append(sim.RZ(1.5632210989912343, 1))
sim.append(sim.CX(2, 1))
sim.append(sim.RZ(-1.5632210989912343, 1))
sim.append(sim.H(1))
sim.append(sim.CX(1, 2))
sim.append(sim.RZ(-0.7853981633974483, 1))
sim.append(sim.RZ(0.7853981633974483, 2))
sim.append(sim.RZ(0, 2))
# Gate: PhasedISWAP**-0.5024296754026449
sim.append(sim.RZ(0.7853981633974483, 0))
sim.append(sim.RZ(-0.7853981633974483, 1))
sim.append(sim.CX(0, 1))
sim.append(sim.H(0))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(-0.7892146885910722, 0))
sim.append(sim.CX(1, 0))
sim.append(sim.RZ(0.7892146885910722, 0))
sim.append(sim.H(0))
sim.append(sim.CX(0, 1))
sim.append(sim.RZ(-0.7853981633974483, 0))
sim.append(sim.RZ(0.7853981633974483, 1))
sim.append(sim.RZ(0, 1))
# Gate: PhasedISWAP**-0.49760685888033646
sim.append(sim.RZ(0.7853981633974483, 2))
sim.append(sim.RZ(-0.7853981633974483, 3))
sim.append(sim.CX(2, 3))
sim.append(sim.H(2))
sim.append(sim.CX(3, 2))
sim.append(sim.RZ(-0.7816390259909868, 2))
sim.append(sim.CX(3, 2))
sim.append(sim.RZ(0.7816390259909868, 2))
sim.append(sim.H(2))
sim.append(sim.CX(2, 3))
sim.append(sim.RZ(-0.7853981633974483, 2))
sim.append(sim.RZ(0.7853981633974483, 3))
sim.append(sim.RZ(0, 3))
# Gate: PhasedISWAP**0.004822678143889672
sim.append(sim.RZ(0.7853981633974483, 1))
sim.append(sim.RZ(-0.7853981633974483, 2))
sim.append(sim.CX(1, 2))
sim.append(sim.H(1))
sim.append(sim.CX(2, 1))
sim.append(sim.RZ(0.0075754452018738224, 1))
sim.append(sim.CX(2, 1))
sim.append(sim.RZ(-0.0075754452018738224, 1))
sim.append(sim.H(1))
sim.append(sim.CX(1, 2))
sim.append(sim.RZ(-0.7853981633974483, 1))
sim.append(sim.RZ(0.7853981633974483, 2))
sim.append(sim.RZ(0, 2))

sim.upload()
sim.run()
sim.measure(10)
