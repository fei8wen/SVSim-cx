namespace Quantum {
    open Microsoft.Quantum.Intrinsic;
    open Microsoft.Quantum.Canon;
    open Microsoft.Quantum.Math;
    open Microsoft.Quantum.Convert;

    operation sat_Circuit() : (Int) {
        mutable m = 0;
        using(qubits = Qubit[11]) {
            H(qubits[1]);
            H(qubits[2]);
            H(qubits[3]);
            H(qubits[4]);
            X(qubits[5]);
            X(qubits[6]);
            X(qubits[7]);
            X(qubits[8]);
            X(qubits[4]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[4], qubits[10], qubits[5]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            X(qubits[2]);
            X(qubits[3]);
            X(qubits[4]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[4], qubits[10], qubits[6]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            X(qubits[1]);
            X(qubits[2]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[4], qubits[10], qubits[7]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            X(qubits[1]);
            X(qubits[2]);
            CCNOT(qubits[2], qubits[3], qubits[8]);
            X(qubits[2]);
            X(qubits[3]);
            CCNOT(qubits[5], qubits[6], qubits[9]);
            CCNOT(qubits[7], qubits[9], qubits[10]);
            CCNOT(qubits[8], qubits[10], qubits[0]);
            X(qubits[0]);
            X(qubits[1]);
            X(qubits[2]);
            X(qubits[3]);
            CCNOT(qubits[7], qubits[9], qubits[10]);
            H(qubits[0]);
            CCNOT(qubits[5], qubits[6], qubits[9]);
            CCNOT(qubits[2], qubits[3], qubits[8]);
            X(qubits[2]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[4], qubits[10], qubits[7]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            X(qubits[1]);
            X(qubits[2]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[4], qubits[10], qubits[6]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            X(qubits[2]);
            X(qubits[3]);
            X(qubits[4]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[4], qubits[10], qubits[5]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            H(qubits[1]);
            H(qubits[2]);
            H(qubits[3]);
            X(qubits[4]);
            X(qubits[1]);
            X(qubits[2]);
            X(qubits[3]);
            H(qubits[4]);
            X(qubits[4]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            CCNOT(qubits[4], qubits[10], qubits[0]);
            H(qubits[0]);
            CCNOT(qubits[3], qubits[9], qubits[10]);
            X(qubits[0]);
            CCNOT(qubits[1], qubits[2], qubits[9]);
            H(qubits[0]);
            X(qubits[1]);
            X(qubits[2]);
            X(qubits[3]);
            X(qubits[4]);
            H(qubits[1]);
            H(qubits[2]);
            H(qubits[3]);
            H(qubits[4]);
            set m = SetBitValue(m, 0, ResultAsBool(M(qubits[1])));
            set m = SetBitValue(m, 1, ResultAsBool(M(qubits[2])));
            set m = SetBitValue(m, 2, ResultAsBool(M(qubits[3])));
            set m = SetBitValue(m, 3, ResultAsBool(M(qubits[4])));
            ResetAll(qubits);
        }
        return (m);
    }
}
